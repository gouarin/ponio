#pragma once
// autogenerated file

#include "butcher_tableau.hpp"
#include "generic_butcher_rk.hpp"

namespace ode::butcher {


/**
 * @brief Butcher tableau of Euler method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_euler : public butcher_tableau<1,value_t>
{
  using base_t = butcher_tableau<1,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 1;
  static constexpr const char* id = "euler";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_euler()
  : base_t(
    {{
    { 0 }
    }}, // A
    { 1.00000000000000000000000000000000000 }, // b
    
    { 0 }  // c
  )
  {}
};
/**
 * @brief Euler method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#euler)
 */
template <typename value_t=double>
using euler = runge_kutta::explicit_rk_butcher<butcher_euler<value_t>>;


/**
 * @brief Butcher tableau of Explicit Euler sub4 method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_explicit_euler_sub4 : public butcher_tableau<4,value_t>
{
  using base_t = butcher_tableau<4,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 1;
  static constexpr const char* id = "explicit_euler_sub4";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_explicit_euler_sub4()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 },
      { 0.250000000000000000000000000000000000 , 0 , 0 , 0 },
      { 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0 , 0 },
      { 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 }, // b
    
    { 0 , 0.250000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 0.750000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief Explicit Euler sub4 method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#explicit_euler_sub4)
 */
template <typename value_t=double>
using explicit_euler_sub4 = runge_kutta::explicit_rk_butcher<butcher_explicit_euler_sub4<value_t>>;


/**
 * @brief Butcher tableau of RK5(4) 6M method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk54_6m : public adaptive_butcher_tableau<6,value_t>
{
  using base_t = adaptive_butcher_tableau<6,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 5;
  static constexpr const char* id = "rk54_6m";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk54_6m()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.200000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 },
      { 0.0750000000000000000000000000000000000 , 0.225000000000000000000000000000000000 , 0 , 0 , 0 , 0 },
      { 0.300000000000000000000000000000000000 , -0.900000000000000000000000000000000000 , 1.20000000000000000000000000000000000 , 0 , 0 , 0 },
      { 0.310013717421124828532235939643347051 , -0.925925925925925925925925925925925926 , 1.20713305898491083676268861454046639 , 0.0754458161865569272976680384087791495 , 0 , 0 },
      { -0.670370370370370370370370370370370370 , 2.50000000000000000000000000000000000 , -0.895622895622895622895622895622895623 , -3.37037037037037037037037037037037037 , 3.43636363636363636363636363636363636 , 0 }
    }}, // A
    { 0.0879629629629629629629629629629629630 , 0 , 0.481000481000481000481000481000481000 , -0.578703703703703703703703703703703704 , 0.920454545454545454545454545454545455 , 0.0892857142857142857142857142857142857 }, // b
    { 0.0574074074074074074074074074074074074 , 0 , 0.639730639730639730639730639730639731 , -1.34259259259259259259259259259259259 , 1.59545454545454545454545454545454545 , 0.0500000000000000000000000000000000000 }, // b2
    { 0 , 0.200000000000000000000000000000000000 , 0.300000000000000000000000000000000000 , 0.600000000000000000000000000000000000 , 0.666666666666666666666666666666666667 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK5(4) 6M method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk54_6m)
 */
template <typename value_t=double>
using rk54_6m = runge_kutta::explicit_rk_butcher<butcher_rk54_6m<value_t>>;


/**
 * @brief Butcher tableau of RK5(4) 7M method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk54_7m : public adaptive_butcher_tableau<7,value_t>
{
  using base_t = adaptive_butcher_tableau<7,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 5;
  static constexpr const char* id = "rk54_7m";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk54_7m()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.200000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.0750000000000000000000000000000000000 , 0.225000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 },
      { 0.977777777777777777777777777777777778 , -3.73333333333333333333333333333333333 , 3.55555555555555555555555555555555556 , 0 , 0 , 0 , 0 },
      { 2.95259868922420362749580856576741350 , -11.5957933241883859167809785093735711 , 9.82289285169943606157597927145252248 , -0.290809327846364883401920438957475995 , 0 , 0 , 0 },
      { 2.84627525252525252525252525252525253 , -10.7575757575757575757575757575757576 , 8.90642271774347246045359252906422718 , 0.278409090909090909090909090909090909 , -0.273531303602058319039451114922813036 , 0 , 0 },
      { 0.0911458333333333333333333333333333333 , 0 , 0.449236298292902066486972147349505840 , 0.651041666666666666666666666666666667 , -0.322376179245283018867924528301886792 , 0.130952380952380952380952380952380952 , 0 }
    }}, // A
    { 0.0911458333333333333333333333333333333 , 0 , 0.449236298292902066486972147349505840 , 0.651041666666666666666666666666666667 , -0.322376179245283018867924528301886792 , 0.130952380952380952380952380952380952 , 0 }, // b
    { 0.0899131944444444444444444444444444444 , 0 , 0.453489068583408206049715483677747829 , 0.614062500000000000000000000000000000 , -0.271512382075471698113207547169811321 , 0.0890476190476190476190476190476190476 , 0.0250000000000000000000000000000000000 }, // b2
    { 0 , 0.200000000000000000000000000000000000 , 0.300000000000000000000000000000000000 , 0.800000000000000000000000000000000000 , 0.888888888888888888888888888888888889 , 1.00000000000000000000000000000000000 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK5(4) 7M method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk54_7m)
 */
template <typename value_t=double>
using rk54_7m = runge_kutta::explicit_rk_butcher<butcher_rk54_7m<value_t>>;


/**
 * @brief Butcher tableau of RK5(4) 7S method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk54_7s : public adaptive_butcher_tableau<7,value_t>
{
  using base_t = adaptive_butcher_tableau<7,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 5;
  static constexpr const char* id = "rk54_7s";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk54_7s()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.222222222222222222222222222222222222 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.0833333333333333333333333333333333333 , 0.250000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 },
      { 0.169753086419753086419753086419753086 , -0.231481481481481481481481481481481481 , 0.617283950617283950617283950617283951 , 0 , 0 , 0 , 0 },
      { 0.251515151515151515151515151515151515 , -0.590909090909090909090909090909090909 , 0.924242424242424242424242424242424242 , 0.0818181818181818181818181818181818182 , 0 , 0 , 0 },
      { -0.678571428571428571428571428571428571 , 2.25000000000000000000000000000000000 , 0.142857142857142857142857142857142857 , -3.85714285714285714285714285714285714 , 3.14285714285714285714285714285714286 , 0 , 0 },
      { 0.0950000000000000000000000000000000000 , 0 , 0.600000000000000000000000000000000000 , -0.607500000000000000000000000000000000 , 0.825000000000000000000000000000000000 , 0.0875000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.0950000000000000000000000000000000000 , 0 , 0.600000000000000000000000000000000000 , -0.607500000000000000000000000000000000 , 0.825000000000000000000000000000000000 , 0.0875000000000000000000000000000000000 , 0 }, // b
    { 0.0862000000000000000000000000000000000 , 0 , 0.666000000000000000000000000000000000 , -0.785700000000000000000000000000000000 , 0.957000000000000000000000000000000000 , 0.0965000000000000000000000000000000000 , -0.0200000000000000000000000000000000000 }, // b2
    { 0 , 0.222222222222222222222222222222222222 , 0.333333333333333333333333333333333333 , 0.555555555555555555555555555555555556 , 0.666666666666666666666666666666666667 , 1.00000000000000000000000000000000000 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK5(4) 7S method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk54_7s)
 */
template <typename value_t=double>
using rk54_7s = runge_kutta::explicit_rk_butcher<butcher_rk54_7s<value_t>>;


/**
 * @brief Butcher tableau of RK6ES method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk6es : public butcher_tableau<7,value_t>
{
  using base_t = butcher_tableau<7,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 6;
  static constexpr const char* id = "rk6es";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk6es()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.202276644898141011452707971329800785 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.0758537418368026988835239876607374754 , 0.227561225510407999506057308281015139 , 0 , 0 , 0 , 0 , 0 },
      { 1.35928221728329989836936420033453032 , -5.23788570262880970318519757711328566 , 4.75360348534550958277122845174744725 , 0 , 0 , 0 , 0 },
      { -0.321092002258021980143354312531300820 , 1.65135312792238009294010225858073682 , -0.905286676763720987715089449920924380 , 0.0750255510993597940494481690620887093 , 0 , 0 , 0 },
      { 0.292321839349364009930098973200074397 , -0.748269386089829957597885368159040809 , 0.592470844966485055138605275715235621 , -0.0395545388491436028521874845864658710 , 0.0280312406231244988508155557838108507 , 0 , 0 },
      { -20.6627618949041007567757333163172007 , 63.8523209463320995382673572748899460 , -74.1517509476887966002323082648217678 , 0.864117644373384008460448058031033725 , 14.5054816592947997122564629535190761 , 16.5925925925925987769460334675386548 , 0 }
    }}, // A
    { 0.0142857142857142991460017711347063596 , 0 , 0 , 0.270899470899470973250799943343736231 , 0.429629629629630027665143643389455974 , 0.270899470899470973250799943343736231 , 0.0142857142857142991460017711347063596 }, // b
    
    { 0 , 0.202276644898141011452707971329800785 , 0.303414967347211017578700875674257986 , 0.875000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 0.125000000000000000000000000000000000 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK6ES method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk6es)
 */
template <typename value_t=double>
using rk6es = runge_kutta::explicit_rk_butcher<butcher_rk6es<value_t>>;


/**
 * @brief Butcher tableau of RK (11,8) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_118 : public butcher_tableau<11,value_t>
{
  using base_t = butcher_tableau<11,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 8;
  static constexpr const char* id = "rk_118";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_118()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.142857142857142857142857142857142857 , 0.0688543580088522450996340977671839333 , -0.0390383362199836741416374687477559683 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.0763979083933828570644280095984760894 , 0 , -0.00524290126703746073574902817320688819 , 0.101518157519666031772174790451301621 , 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.00869633968841999986274901679733315648 , 0 , 0.122706230695671110928109800174221986 , -0.819877943692727111367312946422755886 , 1.18847537330863600057645412945120074 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.347204183213234285871143980803047821 , 0 , -2.70983163154265803367015981531103740 , 14.4163719529844088995029649232284581 , -14.7285172131417371536803632468388711 , 3.50209954384074057387556038624183172 , 0 , 0 , 0 , 0 , 0 },
      { 0.0714285714285714285714285714285714286 , 0 , 0 , 0 , 0.220220056229107301744159853818920837 , 0.424567096585198730472446691764825801 , 0.111111111111111111111111111111111111 , 0 , 0 , 0 , 0 },
      { 0.0312500000000000000000000000000000000 , 0 , 0 , 0 , 0.325059183323042778017966998382444754 , 0.152777777777777777777777777777777778 , -0.0358566170818680551266462330472216696 , 0.0267696559810474993309014568869991378 , 0 , 0 , 0 },
      { 0.0714285714285714285714285714285714286 , 0 , 0 , 0 , 0.111111111111111111111111111111111111 , -0.0269212575244859496741755385587223366 , 0.0125676544839320620411245267781568606 , -0.0105654884908171415630621583748554754 , 0.0150525736376999176144272594923092339 , 0 , 0 },
      { 0 , 0 , 0 , 0 , -4.11544610359393778033979613089422552 , -3.25138043241696711521034047609742750 , -0.418381780101951106261576371283549307 , 0.807270668990839995150465260172438196 , 3.47360265463918933743256269831964973 , 4.50433499248282666922868501978311441 , 0 }
    }}, // A
    { 0.0500000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 , 0 , 0.272222222222222222222222222222222222 , 0.355555555555555555555555555555555556 , 0.272222222222222222222222222222222222 , 0.0500000000000000000000000000000000000 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 0.172673164646011428100853771876570822 , 0.172673164646011428100853771876570822 , 0.500000000000000000000000000000000000 , 0.827326835353988571899146228123429178 , 0.827326835353988571899146228123429178 , 0.500000000000000000000000000000000000 , 0.172673164646011428100853771876570822 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (11,8) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_118)
 */
template <typename value_t=double>
using rk_118 = runge_kutta::explicit_rk_butcher<butcher_rk_118<value_t>>;


/**
 * @brief Butcher tableau of RK (2,1) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_21 : public butcher_tableau<2,value_t>
{
  using base_t = butcher_tableau<2,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 2;
  static constexpr const char* id = "rk_21";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_21()
  : base_t(
    {{
    { 0 , 0 },
      { 1.00000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.500000000000000000000000000000000000 , 0.500000000000000000000000000000000000 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (2,1) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_21)
 */
template <typename value_t=double>
using rk_21 = runge_kutta::explicit_rk_butcher<butcher_rk_21<value_t>>;


/**
 * @brief Butcher tableau of RK (2,2) mid-point method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_22_midpoint : public butcher_tableau<2,value_t>
{
  using base_t = butcher_tableau<2,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 2;
  static constexpr const char* id = "rk_22_midpoint";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_22_midpoint()
  : base_t(
    {{
    { 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 }
    }}, // A
    { 0 , 1.00000000000000000000000000000000000 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (2,2) mid-point method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_22_midpoint)
 */
template <typename value_t=double>
using rk_22_midpoint = runge_kutta::explicit_rk_butcher<butcher_rk_22_midpoint<value_t>>;


/**
 * @brief Butcher tableau of RK (2,2) Ralston method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_22_ralston : public butcher_tableau<2,value_t>
{
  using base_t = butcher_tableau<2,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 2;
  static constexpr const char* id = "rk_22_ralston";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_22_ralston()
  : base_t(
    {{
    { 0 , 0 },
      { 0.666666666666666666666666666666666667 , 0 }
    }}, // A
    { 0.250000000000000000000000000000000000 , 0.750000000000000000000000000000000000 }, // b
    
    { 0 , 0.666666666666666666666666666666666667 }  // c
  )
  {}
};
/**
 * @brief RK (2,2) Ralston method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_22_ralston)
 */
template <typename value_t=double>
using rk_22_ralston = runge_kutta::explicit_rk_butcher<butcher_rk_22_ralston<value_t>>;


/**
 * @brief Butcher tableau of RK (3,2) best method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_32_best : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 2;
  static constexpr const char* id = "rk_32_best";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_32_best()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 , 0 },
      { 0 , 0.500000000000000000000000000000000000 , 0 }
    }}, // A
    { 0 , 0 , 1.00000000000000000000000000000000000 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 , 0.500000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (3,2) best method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_32_best)
 */
template <typename value_t=double>
using rk_32_best = runge_kutta::explicit_rk_butcher<butcher_rk_32_best<value_t>>;


/**
 * @brief Butcher tableau of RK (3,3) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_33 : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_33";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_33()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 , 0 },
      { -1.00000000000000000000000000000000000 , 2.00000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.166666666666666666666666666666666667 , 0.666666666666666666666666666666666667 , 0.166666666666666666666666666666666667 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (3,3) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_33)
 */
template <typename value_t=double>
using rk_33 = runge_kutta::explicit_rk_butcher<butcher_rk_33<value_t>>;


/**
 * @brief Butcher tableau of RK (3,3) 233e method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_33_233e : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_33_233e";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_33_233e()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.666666666666666666666666666666666667 , 0 , 0 },
      { 0.333333333333333333333333333333333333 , 0.333333333333333333333333333333333333 , 0 }
    }}, // A
    { 0.250000000000000000000000000000000000 , 0 , 0.750000000000000000000000000000000000 }, // b
    
    { 0 , 0.666666666666666666666666666666666667 , 0.666666666666666666666666666666666667 }  // c
  )
  {}
};
/**
 * @brief RK (3,3) 233e method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_33_233e)
 */
template <typename value_t=double>
using rk_33_233e = runge_kutta::explicit_rk_butcher<butcher_rk_33_233e<value_t>>;


/**
 * @brief Butcher tableau of RK (3,3) Bogacki-Shampine method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_33_bogackishampine : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_33_bogackishampine";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_33_bogackishampine()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 , 0 },
      { 0 , 0.750000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.222222222222222222222222222222222222 , 0.333333333333333333333333333333333333 , 0.444444444444444444444444444444444444 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 , 0.750000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (3,3) Bogacki-Shampine method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_33_bogackishampine)
 */
template <typename value_t=double>
using rk_33_bogackishampine = runge_kutta::explicit_rk_butcher<butcher_rk_33_bogackishampine<value_t>>;


/**
 * @brief Butcher tableau of RK (3,3) Heun method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_33_heun : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_33_heun";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_33_heun()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.333333333333333333333333333333333333 , 0 , 0 },
      { 0 , 0.666666666666666666666666666666666667 , 0 }
    }}, // A
    { 0.250000000000000000000000000000000000 , 0 , 0.750000000000000000000000000000000000 }, // b
    
    { 0 , 0.333333333333333333333333333333333333 , 0.666666666666666666666666666666666667 }  // c
  )
  {}
};
/**
 * @brief RK (3,3) Heun method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_33_heun)
 */
template <typename value_t=double>
using rk_33_heun = runge_kutta::explicit_rk_butcher<butcher_rk_33_heun<value_t>>;


/**
 * @brief Butcher tableau of RK (3,3) Ralston method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_33_ralston : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_33_ralston";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_33_ralston()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 , 0 },
      { 0 , 0.750000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.222222222222222222222222222222222222 , 0.333333333333333333333333333333333333 , 0.444444444444444444444444444444444444 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 , 0.750000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (3,3) Ralston method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_33_ralston)
 */
template <typename value_t=double>
using rk_33_ralston = runge_kutta::explicit_rk_butcher<butcher_rk_33_ralston<value_t>>;


/**
 * @brief Butcher tableau of RK (3,3) Van der Houwen method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_33_van_der_houwen : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_33_van_der_houwen";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_33_van_der_houwen()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.533333333333333333333333333333333333 , 0 , 0 },
      { 0.250000000000000000000000000000000000 , 0.416666666666666666666666666666666667 , 0 }
    }}, // A
    { 0.250000000000000000000000000000000000 , 0 , 0.750000000000000000000000000000000000 }, // b
    
    { 0 , 0.533333333333333333333333333333333333 , 0.666666666666666666666666666666666667 }  // c
  )
  {}
};
/**
 * @brief RK (3,3) Van der Houwen method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_33_van_der_houwen)
 */
template <typename value_t=double>
using rk_33_van_der_houwen = runge_kutta::explicit_rk_butcher<butcher_rk_33_van_der_houwen<value_t>>;


/**
 * @brief Butcher tableau of RK (4,4) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_44 : public butcher_tableau<4,value_t>
{
  using base_t = butcher_tableau<4,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 4;
  static constexpr const char* id = "rk_44";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_44()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 , 0 , 0 },
      { 0 , 0.500000000000000000000000000000000000 , 0 , 0 },
      { 0 , 0 , 1.00000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.166666666666666666666666666666666667 , 0.333333333333333333333333333333333333 , 0.333333333333333333333333333333333333 , 0.166666666666666666666666666666666667 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (4,4) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_44)
 */
template <typename value_t=double>
using rk_44 = runge_kutta::explicit_rk_butcher<butcher_rk_44<value_t>>;


/**
 * @brief Butcher tableau of RK (4,4) 235j method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_44_235j : public butcher_tableau<4,value_t>
{
  using base_t = butcher_tableau<4,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 4;
  static constexpr const char* id = "rk_44_235j";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_44_235j()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 },
      { 0.250000000000000000000000000000000000 , 0 , 0 , 0 },
      { 0 , 0.500000000000000000000000000000000000 , 0 , 0 },
      { 1.00000000000000000000000000000000000 , -2.00000000000000000000000000000000000 , 2.00000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.166666666666666666666666666666666667 , 0 , 0.666666666666666666666666666666666667 , 0.166666666666666666666666666666666667 }, // b
    
    { 0 , 0.250000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (4,4) 235j method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_44_235j)
 */
template <typename value_t=double>
using rk_44_235j = runge_kutta::explicit_rk_butcher<butcher_rk_44_235j<value_t>>;


/**
 * @brief Butcher tableau of RK (4,4) 3/8 method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_44_38 : public butcher_tableau<4,value_t>
{
  using base_t = butcher_tableau<4,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 4;
  static constexpr const char* id = "rk_44_38";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_44_38()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 },
      { 0.333333333333333333333333333333333333 , 0 , 0 , 0 },
      { -0.333333333333333333333333333333333333 , 1.00000000000000000000000000000000000 , 0 , 0 },
      { 1.00000000000000000000000000000000000 , -1.00000000000000000000000000000000000 , 1.00000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.125000000000000000000000000000000000 , 0.375000000000000000000000000000000000 , 0.375000000000000000000000000000000000 , 0.125000000000000000000000000000000000 }, // b
    
    { 0 , 0.333333333333333333333333333333333333 , 0.666666666666666666666666666666666667 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (4,4) 3/8 method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_44_38)
 */
template <typename value_t=double>
using rk_44_38 = runge_kutta::explicit_rk_butcher<butcher_rk_44_38<value_t>>;


/**
 * @brief Butcher tableau of RK (4,4) Ralston method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_44_ralston : public butcher_tableau<4,value_t>
{
  using base_t = butcher_tableau<4,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 4;
  static constexpr const char* id = "rk_44_ralston";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_44_ralston()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 },
      { 0.400000000000000022204460492503130808 , 0 , 0 , 0 },
      { 0.296977610000000002976605628646211699 , 0.158759640000000007420410952363454271 , 0 , 0 },
      { 0.218100399999999999822719587427855004 , -3.05096516000000006485493031505029649 , 3.83286476000000009278778634325135499 , 0 }
    }}, // A
    { 0.174760279999999990074854849808616564 , -0.551480659999999955900307213596533984 , 1.20553559999999992946584370656637475 , 0.171184780000000008604033041592629161 }, // b
    
    { 0 , 0.400000000000000022204460492503130808 , -0.455737249999999982641440965380752459 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (4,4) Ralston method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_44_ralston)
 */
template <typename value_t=double>
using rk_44_ralston = runge_kutta::explicit_rk_butcher<butcher_rk_44_ralston<value_t>>;


/**
 * @brief Butcher tableau of RK (6,5) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_65 : public butcher_tableau<6,value_t>
{
  using base_t = butcher_tableau<6,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 5;
  static constexpr const char* id = "rk_65";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_65()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.200000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 },
      { 0.0750000000000000000000000000000000000 , 0.225000000000000000000000000000000000 , 0 , 0 , 0 , 0 },
      { 0.977777777777777777777777777777777778 , -3.73333333333333333333333333333333333 , 3.55555555555555555555555555555555556 , 0 , 0 , 0 },
      { 2.95259868922420362749580856576741350 , -11.5957933241883859167809785093735711 , 9.82289285169943606157597927145252248 , -0.290809327846364883401920438957475995 , 0 , 0 },
      { 2.84627525252525252525252525252525253 , -10.7575757575757575757575757575757576 , 8.90642271774347246045359252906422718 , 0.278409090909090909090909090909090909 , -0.273531303602058319039451114922813036 , 0 }
    }}, // A
    { 0.0911458333333333333333333333333333333 , 0 , 0.449236298292902066486972147349505840 , 0.651041666666666666666666666666666667 , -0.322376179245283018867924528301886792 , 0.130952380952380952380952380952380952 }, // b
    
    { 0 , 0.200000000000000000000000000000000000 , 0.300000000000000000000000000000000000 , 0.800000000000000000000000000000000000 , 0.888888888888888888888888888888888889 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (6,5) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_65)
 */
template <typename value_t=double>
using rk_65 = runge_kutta::explicit_rk_butcher<butcher_rk_65<value_t>>;


/**
 * @brief Butcher tableau of RK (6,5) 236a method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_65_236a : public butcher_tableau<6,value_t>
{
  using base_t = butcher_tableau<6,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 5;
  static constexpr const char* id = "rk_65_236a";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_65_236a()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.250000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 },
      { 0.125000000000000000000000000000000000 , 0.125000000000000000000000000000000000 , 0 , 0 , 0 , 0 },
      { 0 , 0 , 0.500000000000000000000000000000000000 , 0 , 0 , 0 },
      { 0.187500000000000000000000000000000000 , -0.375000000000000000000000000000000000 , 0.375000000000000000000000000000000000 , 0.562500000000000000000000000000000000 , 0 , 0 },
      { -0.428571428571428571428571428571428571 , 1.14285714285714285714285714285714286 , 0.857142857142857142857142857142857143 , -1.71428571428571428571428571428571429 , 1.14285714285714285714285714285714286 , 0 }
    }}, // A
    { 0.0777777777777777777777777777777777778 , 0 , 0.355555555555555555555555555555555556 , 0.133333333333333333333333333333333333 , 0.355555555555555555555555555555555556 , 0.0777777777777777777777777777777777778 }, // b
    
    { 0 , 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 0.750000000000000000000000000000000000 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (6,5) 236a method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_65_236a)
 */
template <typename value_t=double>
using rk_65_236a = runge_kutta::explicit_rk_butcher<butcher_rk_65_236a<value_t>>;


/**
 * @brief Butcher tableau of RK (7,6) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_76 : public butcher_tableau<7,value_t>
{
  using base_t = butcher_tableau<7,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 6;
  static constexpr const char* id = "rk_76";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_76()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 1.00000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.375000000000000000000000000000000000 , 0.125000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 },
      { 0.296296296296296296296296296296296296 , 0.0740740740740740740740740740740740741 , 0.296296296296296296296296296296296296 , 0 , 0 , 0 , 0 },
      { 0.0516407685066391838247255733253879500 , -0.0493351898988604080288153633933059492 , 0.296011139393162448172892180359835695 , -0.125643553354929795867948618415346874 , 0 , 0 , 0 },
      { -1.18548816439476489881630205836767457 , -0.236379095815425306256898922320979765 , -0.748175623666259592912334235710695264 , 0.880854580239270368567072005777177082 , 2.11651513899116800131760943874560170 , 0 , 0 },
      { 4.50650248872424000384302752967467162 , 0.666666666666666666666666666666666667 , 6.01733996993130667691474007913245765 , -4.11170447970363200691744955341440891 , -7.01891409758019911572274414672071705 , 0.940109451961617775215759424661330032 , 0 }
    }}, // A
    { 0.0500000000000000000000000000000000000 , 0 , 0.355555555555555555555555555555555556 , 0 , 0.272222222222222222222222222222222222 , 0.272222222222222222222222222222222222 , 0.0500000000000000000000000000000000000 }, // b
    
    { 0 , 1.00000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 0.666666666666666666666666666666666667 , 0.172673164646011428100853771876570822 , 0.827326835353988571899146228123429178 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (7,6) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_76)
 */
template <typename value_t=double>
using rk_76 = runge_kutta::explicit_rk_butcher<butcher_rk_76<value_t>>;


/**
 * @brief Butcher tableau of RK (8,6) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_86 : public butcher_tableau<8,value_t>
{
  using base_t = butcher_tableau<8,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 6;
  static constexpr const char* id = "rk_86";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_86()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.111111111111111111111111111111111111 , 0 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.0416666666666666666666666666666666667 , 0.125000000000000000000000000000000000 , 0 , 0 , 0 , 0 , 0 , 0 },
      { 0.166666666666666666666666666666666667 , -0.500000000000000000000000000000000000 , 0.666666666666666666666666666666666667 , 0 , 0 , 0 , 0 , 0 },
      { 0.368690851735015772870662460567823344 , -1.09660883280757097791798107255520505 , 0.974763406940063091482649842271293375 , 0.253154574132492113564668769716088328 , 0 , 0 , 0 , 0 },
      { -13.3648790746582544689800210304942166 , 26.1419558359621451104100946372239748 , -0.126182965299684542586750788643533123 , -19.9842271293375394321766561514195584 , 8.00000000000000000000000000000000000 , 0 , 0 , 0 },
      { 1.88149632224077854064864641966145028 , -2.76774447949526813880126182965299685 , -0.605550658749304138059009092596028948 , 2.47168035195150615451227809735881734 , -0.176879084967320261437908496732026144 , 0.0303308823529411764705882352941176471 , 0 , 0 },
      { -2.88622883561364839849920117312139906 , 4.31164884204047087789489882280526275 , 0.757810625981561355787987273081118267 , -1.10163091935242974623103069034030478 , -1.01936872309899569583931133428981349 , 0.0597202295552367288378766140602582496 , 0.878048780487804878048780487804878049 , 0 }
    }}, // A
    { 0.0488095238095238095238095238095238095 , 0 , 0.257142857142857142857142857142857143 , 0.0321428571428571428571428571428571429 , 0.323809523809523809523809523809523810 , 0.0321428571428571428571428571428571429 , 0.257142857142857142857142857142857143 , 0.0488095238095238095238095238095238095 }, // b
    
    { 0 , 0.111111111111111111111111111111111111 , 0.166666666666666666666666666666666667 , 0.333333333333333333333333333333333333 , 0.500000000000000000000000000000000000 , 0.666666666666666666666666666666666667 , 0.833333333333333333333333333333333333 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK (8,6) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_86)
 */
template <typename value_t=double>
using rk_86 = runge_kutta::explicit_rk_butcher<butcher_rk_86<value_t>>;


/**
 * @brief Butcher tableau of RK NSSP (2,1) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_nssp_21 : public butcher_tableau<2,value_t>
{
  using base_t = butcher_tableau<2,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 1;
  static constexpr const char* id = "rk_nssp_21";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_nssp_21()
  : base_t(
    {{
    { 0 , 0 },
      { 0.750000000000000000000000000000000000 , 0 }
    }}, // A
    { 0 , 1.00000000000000000000000000000000000 }, // b
    
    { 0 , 0.750000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK NSSP (2,1) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_nssp_21)
 */
template <typename value_t=double>
using rk_nssp_21 = runge_kutta::explicit_rk_butcher<butcher_rk_nssp_21<value_t>>;


/**
 * @brief Butcher tableau of RK NSSP (3,2) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_nssp_32 : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_nssp_32";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_nssp_32()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.333333333333333333333333333333333333 , 0 , 0 },
      { 0 , 1.00000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.500000000000000000000000000000000000 , 0 , 0.500000000000000000000000000000000000 }, // b
    
    { 0 , 0.333333333333333333333333333333333333 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK NSSP (3,2) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_nssp_32)
 */
template <typename value_t=double>
using rk_nssp_32 = runge_kutta::explicit_rk_butcher<butcher_rk_nssp_32<value_t>>;


/**
 * @brief Butcher tableau of RK NSSP (3,3) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_nssp_33 : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_nssp_33";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_nssp_33()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { -0.444444444444444444444444444444444444 , 0 , 0 },
      { 1.16666666666666666666666666666666667 , -0.500000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.250000000000000000000000000000000000 , 0 , 0.750000000000000000000000000000000000 }, // b
    
    { 0 , -0.444444444444444444444444444444444444 , 0.666666666666666666666666666666666667 }  // c
  )
  {}
};
/**
 * @brief RK NSSP (3,3) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_nssp_33)
 */
template <typename value_t=double>
using rk_nssp_33 = runge_kutta::explicit_rk_butcher<butcher_rk_nssp_33<value_t>>;


/**
 * @brief Butcher tableau of RK NSSP (5,3) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_nssp_53 : public butcher_tableau<5,value_t>
{
  using base_t = butcher_tableau<5,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_nssp_53";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_nssp_53()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 },
      { 0.142857142857142857142857142857142857 , 0 , 0 , 0 , 0 },
      { 0 , 0.187500000000000000000000000000000000 , 0 , 0 , 0 },
      { 0 , 0 , 0.333333333333333333333333333333333333 , 0 , 0 },
      { 0 , 0 , 0 , 0.666666666666666666666666666666666667 , 0 }
    }}, // A
    { 0.250000000000000000000000000000000000 , 0 , 0 , 0 , 0.750000000000000000000000000000000000 }, // b
    
    { 0 , 0.142857142857142857142857142857142857 , 0.187500000000000000000000000000000000 , 0.333333333333333333333333333333333333 , 0.666666666666666666666666666666666667 }  // c
  )
  {}
};
/**
 * @brief RK NSSP (5,3) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_nssp_53)
 */
template <typename value_t=double>
using rk_nssp_53 = runge_kutta::explicit_rk_butcher<butcher_rk_nssp_53<value_t>>;


/**
 * @brief Butcher tableau of RK SPP (4,3) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_spp_43 : public butcher_tableau<4,value_t>
{
  using base_t = butcher_tableau<4,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_spp_43";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_spp_43()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 0 , 0 },
      { 0.166666666666666666666666666666666667 , 0.166666666666666666666666666666666667 , 0.166666666666666666666666666666666667 , 0 }
    }}, // A
    { 0.166666666666666666666666666666666667 , 0.166666666666666666666666666666666667 , 0.166666666666666666666666666666666667 , 0.500000000000000000000000000000000000 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 , 1.00000000000000000000000000000000000 , 0.500000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK SPP (4,3) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_spp_43)
 */
template <typename value_t=double>
using rk_spp_43 = runge_kutta::explicit_rk_butcher<butcher_rk_spp_43<value_t>>;


/**
 * @brief Butcher tableau of RK SSP (2,2) Heun method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_ssp_22_heun : public butcher_tableau<2,value_t>
{
  using base_t = butcher_tableau<2,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 2;
  static constexpr const char* id = "rk_ssp_22_heun";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_ssp_22_heun()
  : base_t(
    {{
    { 0 , 0 },
      { 1.00000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.500000000000000000000000000000000000 , 0.500000000000000000000000000000000000 }, // b
    
    { 0 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK SSP (2,2) Heun method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_ssp_22_heun)
 */
template <typename value_t=double>
using rk_ssp_22_heun = runge_kutta::explicit_rk_butcher<butcher_rk_ssp_22_heun<value_t>>;


/**
 * @brief Butcher tableau of RK SSP (3,2) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_ssp_32 : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 2;
  static constexpr const char* id = "rk_ssp_32";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_ssp_32()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0 , 0 },
      { 0.500000000000000000000000000000000000 , 0.500000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.333333333333333333333333333333333333 , 0.333333333333333333333333333333333333 , 0.333333333333333333333333333333333333 }, // b
    
    { 0 , 0.500000000000000000000000000000000000 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK SSP (3,2) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_ssp_32)
 */
template <typename value_t=double>
using rk_ssp_32 = runge_kutta::explicit_rk_butcher<butcher_rk_ssp_32<value_t>>;


/**
 * @brief Butcher tableau of RK SSP (3,3) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_ssp_33 : public butcher_tableau<3,value_t>
{
  using base_t = butcher_tableau<3,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_ssp_33";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_ssp_33()
  : base_t(
    {{
    { 0 , 0 , 0 },
      { 1.00000000000000000000000000000000000 , 0 , 0 },
      { 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0 }
    }}, // A
    { 0.166666666666666666666666666666666667 , 0.166666666666666666666666666666666667 , 0.666666666666666666666666666666666667 }, // b
    
    { 0 , 1.00000000000000000000000000000000000 , 0.500000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK SSP (3,3) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_ssp_33)
 */
template <typename value_t=double>
using rk_ssp_33 = runge_kutta::explicit_rk_butcher<butcher_rk_ssp_33<value_t>>;


/**
 * @brief Butcher tableau of RK SSP (4,2) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_ssp_42 : public butcher_tableau<4,value_t>
{
  using base_t = butcher_tableau<4,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 2;
  static constexpr const char* id = "rk_ssp_42";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_ssp_42()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 },
      { 0.333333333333333333333333333333333333 , 0 , 0 , 0 },
      { 0.333333333333333333333333333333333333 , 0.333333333333333333333333333333333333 , 0 , 0 },
      { 0.333333333333333333333333333333333333 , 0.333333333333333333333333333333333333 , 0.333333333333333333333333333333333333 , 0 }
    }}, // A
    { 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 , 0.250000000000000000000000000000000000 }, // b
    
    { 0 , 0.333333333333333333333333333333333333 , 0.666666666666666666666666666666666667 , 1.00000000000000000000000000000000000 }  // c
  )
  {}
};
/**
 * @brief RK SSP (4,2) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_ssp_42)
 */
template <typename value_t=double>
using rk_ssp_42 = runge_kutta::explicit_rk_butcher<butcher_rk_ssp_42<value_t>>;


/**
 * @brief Butcher tableau of RK SSP (5,3) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_ssp_53 : public butcher_tableau<5,value_t>
{
  using base_t = butcher_tableau<5,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 3;
  static constexpr const char* id = "rk_ssp_53";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_ssp_53()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 },
      { 0.377268915117099978839831919685821049 , 0 , 0 , 0 , 0 },
      { 0.377268915117099978839831919685821049 , 0.377268915117099978839831919685821049 , 0 , 0 , 0 },
      { 0.163522940897709995189401865900435951 , 0.163522940897709995189401865900435951 , 0.163522940897709995189401865900435951 , 0 , 0 },
      { 0.149040593948560007309112052098498680 , 0.148312733847240002527101410123577807 , 0.148312733847240002527101410123577807 , 0.342176968500080003199315115125500597 , 0 }
    }}, // A
    { 0.197075963844809992631113004790677223 , 0.117803165097650000547879756140901009 , 0.117097251937719998293729872784751933 , 0.270158749342509996171912689533201046 , 0.297864870101040013494753111444879323 }, // b
    
    { 0 , 0.377268915117099978839831919685821049 , 0.754537830234189965672442212962778285 , 0.490568822693140005331002839739085175 , 0.787843030143109968044257129804464057 }  // c
  )
  {}
};
/**
 * @brief RK SSP (5,3) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_ssp_53)
 */
template <typename value_t=double>
using rk_ssp_53 = runge_kutta::explicit_rk_butcher<butcher_rk_ssp_53<value_t>>;


/**
 * @brief Butcher tableau of RK SSP (5,4) method
 * @tparam value_t type of coefficient (``double``by default)
 */
template <typename value_t=double>
struct butcher_rk_ssp_54 : public butcher_tableau<5,value_t>
{
  using base_t = butcher_tableau<5,value_t>;
  static constexpr std::size_t N_stages = base_t::N_stages;
  static constexpr std::size_t order = 4;
  static constexpr const char* id = "rk_ssp_54";

  using base_t::A;
  using base_t::b;
  using base_t::c;

  butcher_rk_ssp_54()
  : base_t(
    {{
    { 0 , 0 , 0 , 0 , 0 },
      { 0.391752227003919983872037846595048904 , 0 , 0 , 0 , 0 },
      { 0.217669096338209994145884706995275337 , 0.368410592629589972446524370752740651 , 0 , 0 , 0 },
      { 0.0826920867094999983981651325848361012 , 0.139958502069989998428667377083911560 , 0.251891774247380018092457021339214407 , 0 , 0 },
      { 0.0679662837032000005654808205690642353 , 0.115034698444379995807551608777430374 , 0.207034898649290005634426847791473847 , 0.544974750212369962731884243112290278 , 0 }
    }}, // A
    { 0.146811876186610013039768318776623346 , 0.248482909245559990818463802497717552 , 0.104258830366499993802520407371048350 , 0.274438900919599992889175155141856521 , 0.226007483193950003963479389312851708 }, // b
    
    { 0 , 0.391752227003919983872037846595048904 , 0.586079688967789946829611835710238665 , 0.474542363026869973285926107564591803 , 0.935010631009239978617131328064715490 }  // c
  )
  {}
};
/**
 * @brief RK SSP (5,4) method
 * @tparam value_t type of coefficient (``double``by default)
 * 
 * @details see more on [ponio](https://josselin.massot.gitlab.labos.polytechnique.fr/ponio/viewer.html#rk_ssp_54)
 */
template <typename value_t=double>
using rk_ssp_54 = runge_kutta::explicit_rk_butcher<butcher_rk_ssp_54<value_t>>;



} // namespace ode::butcher